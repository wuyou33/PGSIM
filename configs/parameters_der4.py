import numpy as np
import math

pi = math.pi

Lc = .35e-3
rLc = .03
wc = 31.41

DER_num = 4
lines_num = 3
loads_num = 2

mp1 = 9.4 * 1e-5
nq1 = 1.3 * 1e-3
mp2 = mp1
nq2 = nq1
mp3 = 12.5 * 1e-5
nq3 = 1.5 * 1e-3
mp4 = mp3
nq4 = nq3

rN = 1e4
wref = 2 * pi * 60
Vnom = 380.0

# for critical bus control
kp = 4
ki = 40

# Network Data
rline1 = 0.23
Lline1 = 0.318 / (2 * pi * 60)
rline2 = 0.35
Lline2 = 1.847 / (2 * pi * 60)
rline3 = 0.23
Lline3 = 0.318 / (2 * pi * 60)

Rload1 = 2.5
Lload1 = 1 / (2 * pi * 60)
Rload2 = 3
Lload2 = 2 / (2 * pi * 60)

# Controller Parameters
a_ctrl = 40

AP = 4 * np.array([[.0, 0, 0, 0],
                   [1, 0, 0, 0],
                   [0, 1, 0, 0],
                   [0, 0, 1, 0],
                   ])

# Pinning gain to the reference frequency
G = np.array([[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]])

# matrix for bus and load connection
BUS_LOAD = np.array([1, 0, 1, 0])

# matrix for bus connection
BUSES = np.array([[0, 1, 0, 0],
                  [1, 0, 1, 0],
                  [0, 1, 0, 1],
                  [0, 0, 1, 0]])

Physical_Graph = np.array([[0, 1, 0, 0],
                           [1, 0, 1, 0],
                           [0, 1, 0, 1],
                           [0, 0, 1, 0]])

Distance_Mask = np.array([[0, 1, 2, 3],
                          [1, 0, 1, 2],
                          [2, 1, 0, 1],
                          [3, 2, 1, 0]])

DER_dic = np.array([[Rload1, Lload1, mp1, nq1],
                    [0, 0, mp2, nq2],
                    [Rload2, Lload2, mp3, nq3],
                    [0, 0, mp4, nq4]])

rline = np.array([rline1, rline2, rline3])
Lline = np.array([Lline1, Lline2, Lline3])

# add 0, to meet the difference between MATLAB and python, shape=(35,)
x0 = np.array([0, 0, 0, 0, 0, 0,
               0, 0, 0, 0, 0,
               0, 0, 0, 0, 0,
               0, 0, 0, 0, 0,
               0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
               2 * pi * 60, 2 * pi * 60, 2 * pi * 60, 2 * pi * 60,
               Vnom, Vnom, Vnom, Vnom])

mp = np.array([mp1, mp2, mp3, mp4])
nq = np.array([nq1, nq2, nq3, nq4])

obs_mean = np.array([[0.00000000e+00, -1.25472351e+03, -2.12519352e+03, 4.10819053e+00,
                      -8.73258639e-01, 7.06497949e-01, -4.92866602e-01, 3.72485264e+02,
                      -6.83244265e+00],
                     [-3.01979698e-03, 4.14551913e+02, -2.07692677e+03, -2.13223582e+00,
                      -1.34217855e+00, 0.00000000e+00, 0.00000000e+00, 3.89795909e+02,
                      1.26289101e+01],
                     [-6.87461608e-03, -1.07905479e+02, -1.55205693e+03, 8.49008251e+00,
                      -4.62387385e-01, -3.16647345e-01, -1.19334490e+00, 3.81486416e+02,
                      2.29906559e+01],
                     [-8.41740074e-03, -1.03054684e+03, -8.92739050e+02, -3.68726862e+00,
                      -9.41845252e-01, 0.00000000e+00, 0.00000000e+00, 3.95523327e+02,
                      3.52166136e+01]])

obs_std = np.array([[1e-12, 9.03935509e+04, 4.07198509e+04, 3.09694785e+02,
                     3.63693026e+01, 1.14880758e+01, 2.14060149e+01, 1.26208840e+01,
                     1.04869236e+00],
                    [4.90044782e-01, 1.06416791e+05, 2.64131909e+04, 3.33947461e+02,
                     6.00689740e+01, 1e-12, 1e-12, 1.18473960e+01,
                     6.53970631e+00],
                    [3.60300508e-01, 1.23964177e+05, 2.30459256e+04, 3.85219327e+02,
                     9.32747376e+01, 2.21537447e+01, 2.56743784e+01, 1.18200888e+01,
                     1.39858282e+01],
                    [3.52282040e-01, 1.14521148e+05, 2.90240489e+04, 2.66153315e+02,
                     8.41119329e+01, 1e-12, 1e-12, 1.29708915e+01,
                     1.47636637e+01]])
